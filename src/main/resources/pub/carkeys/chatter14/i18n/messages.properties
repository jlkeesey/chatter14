#
# Copyright 2022 James Keesey
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#

# Displayed as an error message to indicate that the data center named Crystal
# is not defined in the loaded data center list.
default_datacenter_not_found=Default data center Crystal not defined.

# Displayed as an error message to indicate that the builtin data center
# definition file could not be read.
datacenter_definitions_not_loaded=Data center definitions could not be loaded.

# Displayed as a fatal error if the application.properties file can not be
# loaded at startup time.
application_properties_load_failed=Failed to load application.properties.

# Displayed as part of the command line help when the -h flag is present. This
# is the header that appears before the option help describing the overall
# application.
command_help_text=Extracts Final Fantasy 14 chat and emote lines from ACT logs.\n\
\n\
This application takes one or more ACT log files and extracts various chat and optionally \n\
emote lines from the log. The lines can be further filtered by a list of user names.\n\
\n\
This command can be run in either command line or windowed modes. Command line mode\n\
is useful for experience users or inclusion in scripts. Windowed mode allows for \n\
drag-and-drop actions to convert files. The default is to use windowed mode.

# Displayed as a header over the list of configured groups as read from the
# configuration file.
configured_group_header=Configured groups:

# Help text for the log config (--config) command line option.
command_line_log_config=logs the config

# Help text for the log universe (--universe) command line option.
command_line_log_universe=logs the universe definition

# Help text for the dry run (--dryrun) command line option.
command_line_dry_run=process without creating output files

# Help text for the replace files (--replace) command line option.
command_line_replace=replace existing text files

# Help text for the include emotes (--emotes) command line option.
command_line_include_emotes=include emotes in the output

# Help text for the window (--window) command line option.
command_line_windowed=display drag-and-drop target window

# Help text for the group (--group) command line option.
command_line_group=group (list of users) to filter for

# Help text for the list of files command line option.
command_line_files=The log files to process

# Displayed as a header over the current configuration file values as parsed.
log_configuration_file_header=Configuration file:

# Displayed as a header over the current universe definition as parsed.
log_universe_definition_header=Universe definition:

# Displayed when an unexpected error occurs. Very general and hopefully never
# happens.
log_unexpected_error=Something unexpected occurred.

# Displayed when an error occurs trying to read a configuration file.
log_configuration_read_error=Error attempting to read one of the configuration: {0}

# Displayed to log the name of the configuration file that is being read for
# this execution.
log_configuration_file_exists=Reading configuration file {0}

# Displayed to log the name of the configuration resource that is being used to
# provide default values.
log_configuration_using_defaults=Reading default configuration resource {0}

# The label for the everyone group that represents all users.
labelEveryone=Everyone

# Logged when a data center name is encountered that is not present in the list
# of  data centers that was loaded.
log_invalid_data_center_name=''{0}'' not a valid data center name. Valid names are: {1}

# Logged when a server name is encountered that is not present in the current
# data center that was loaded.
log_invalid_server_name=''{0}'' is not a valid server name in data center ''{1}''. Valid names are: {2}

# Logged when a configuration has been successfully loaded but the validation
# failed. Previous log message will have listed all of the problems.
log_configuration_errors=There were errors in the configuration.

# Logged when the configuration is validated and a group does not have a valid
# short name. It is either missing or blank.
log_group_missing_short_name=Group definition at index {0,number,integer} is missing a shortName

# Logged when the configuration is validated and a group's short name is the
# same as another group.
log_group_duplicate_short_name=There is more than one group definition with the same shortName: {0}

# Logged when the configuration is validated and a group does not have a valid
# label. It is either missing or blank.
log_group_missing_label=Group definition at index {0,number,integer} is missing a label

# Logged when the configuration is validated and a group's label is the same as
# another group.
log_group_duplicate_label=There is more than one group definition with the same label: {0}

# Logged when the configuration is validated and a group has no participants
# listed. At least one participant is required.
log_group_participants_missing=Group definition {0} is missing participants. Add at least one user to the participants list.

# Logged when the configuration is validated and a group has a participant whose
# name is missing or blank.
log_group_participant_name_missing=The participant name at index {0,number,integer} of Group definition {1} is missing or blank.

# Logged at the beginning of processing the list of log files.
log_processing_files=Processing all log files in {0}

# Logged when an input file name does not exist.
log_input_file_missing={0}Input file {1} does not exist

# Logged when an input name exists but is not a file.
log_input_not_a_file={0}Input name {1} is not a file

# Logged when the target file name exists and the replace flag is false.
log_target_exists={0}Target file exists, skipping: ''{1}''

# Logged when a log file is being processed.
log_processing_a_file={0}Processing {1}

# Written as the first line of each output file.
output_header=# Created at {0}

# Written after the header if there are no lines to write to the output.
output_no_lines_matched=# No lines matched the criteria

# Label for button that opens the log window
label_log=Log

# Label for dry run checkbox
label_dry_run=Dry run

# Label for include emotes checkbox
label_emotes=Emotes

# Label for replace files checkbox
label_replace_files=Replace files

# Logged when a font is being registered with the window manager.
label_registering_font=Registering font {0}

# Logged when a font cannot be read.
label_font_read_error=IO error reading font ''{0}''

# Logged when a font file is in the wrong format and cannot be processed.
label_font_format_error=Font format error reading font ''{0}''
